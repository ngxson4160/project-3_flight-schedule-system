generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum GENDER {
    MALE
    FEMALE
    OTHER
}

enum ROLE {
    ADMIN
    PILOT
    TOUR_GUIDE
    CUSTOMER
}

enum ROUTE_TYPE {
    ADVENTURE
    TRAINING
    REGULAR
    TEST
    HIRE
}

enum WORK_SCHEDULE_STATUS {
    APPLY
    ORIGINAL
    PENDING_UPDATE
    REJECT_UPDATE
}

enum FLIGHT_SCHEDULE_STATUS {
    BOOKING_SUCCESS
    CANCEL
    PENDING_HIRE
    ACCEPT_HIRE
    REJECT_HIRE
}

model User {
    id Int @id @default(autoincrement())

    email        String    @unique
    firstName    String
    lastName     String
    password     String    @db.VarChar(255)
    avata        String?
    dob          DateTime?
    gender       GENDER
    phoneNumber  String?   @map("phone_number") @db.VarChar(255)
    accessToken  String?   @db.VarChar(500)
    refreshToken String?   @map("refresh_token") @db.VarChar(500)
    role         ROLE

    userFlightSchedule            UserFlightSchedule[]
    workSchedule                  WorkSchedule[]
    noteRequestChangeWorkSchedule NoteRequestChangeWorkSchedule[]
    noteRequestHireHelicopter     NoteRequestHireHelicopter[]

    userRole UserRole[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("user")
}

model Role {
    id Int @id @default(autoincrement())

    name           String
    userRole       UserRole[]
    rolePermission RolePermission[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("role")
}

model Permission {
    id Int @id @default(autoincrement())

    action         String
    rolePermission RolePermission[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("permission")
}

model UserRole {
    userId Int  @map("user_id")
    roleId Int  @map("role_id")
    user   User @relation(fields: [userId], references: [id])
    role   Role @relation(fields: [roleId], references: [id])

    @@unique([userId, roleId])
    @@map("user_role")
}

model RolePermission {
    permissioId Int        @map("permission_id")
    roleId      Int        @map("role_id")
    permission  Permission @relation(fields: [permissioId], references: [id])
    role        Role       @relation(fields: [roleId], references: [id])

    @@unique([permissioId, roleId])
    @@map("role_permission")
}

model Route {
    id Int @id @default(autoincrement())

    locations    Json
    description  String?
    flightLength Int
    duration     Int
    type         ROUTE_TYPE
    price        Int

    flightSchedule         FlightSchedule[]
    adventureOparatingTime AdventureOperatingTime[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("route")
}

model FlightSchedule {
    id Int @id @default(autoincrement())

    routeId      Int        @map("route_id")
    helicopterId Int        @map("helicopter_id")
    route        Route      @relation(fields: [routeId], references: [id])
    helicopter   Helicopter @relation(fields: [helicopterId], references: [id])

    date              DateTime
    start             DateTime
    end               DateTime
    duration          Int
    isAllowMatchOther Boolean                 @default(false) @map("is_allow_match_other")
    price             Int
    capacity          Int
    type              ROUTE_TYPE
    status            FLIGHT_SCHEDULE_STATUS?

    userFlightSchedule        UserFlightSchedule[]
    NoteRequestHireHelicopter NoteRequestHireHelicopter[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("flight_schedule")
}

model UserFlightSchedule {
    userId           Int            @map("user_id")
    flightScheduleId Int            @map("flight_schedule_id")
    user             User           @relation(fields: [userId], references: [id])
    flightSchedule   FlightSchedule @relation(fields: [flightScheduleId], references: [id])

    price Int @default(0)

    @@unique([userId, flightScheduleId])
    @@map("user_flight_schedule")
}

model WorkSchedule {
    id Int @id @default(autoincrement())

    userId Int  @map("user_id")
    user   User @relation(fields: [userId], references: [id])

    startTime                     DateTime
    endTime                       DateTime
    date                          DateTime                        @db.Timestamp(0)
    parentId                      Int?                            @map("parent_id")
    status                        WORK_SCHEDULE_STATUS?           @default(APPLY)
    NoteRequestChangeWorkSchedule NoteRequestChangeWorkSchedule[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("work_schedule")
}

model Helicopter {
    id Int @id @default(autoincrement())

    // capacity    Json
    name        String  @unique
    capacity    Int
    description String?
    img         String?
    type        String?
    engine      String?
    speed       String?

    flightSchedule FlightSchedule[]

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("helicopter")
}

model AdventureOperatingTime {
    id Int @id @default(autoincrement())

    routeId Int   @map("route_id")
    route   Route @relation(fields: [routeId], references: [id])

    startMorning   DateTime?
    endMorning     DateTime?
    startAfternoon DateTime?
    endAfternoon   DateTime?
    date           DateTime  @db.Timestamp(0)

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("adventure_operating_time")
}

model NoteRequestChangeWorkSchedule {
    id Int @id @default(autoincrement())

    userId         Int          @map("user_id")
    user           User         @relation(fields: [userId], references: [id])
    workScheduleId Int          @map("work_schedule_id")
    workSchedule   WorkSchedule @relation(fields: [workScheduleId], references: [id])

    message String
    role    ROLE

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("note_request_change_work_schedule")
}

model NoteRequestHireHelicopter {
    id Int @id @default(autoincrement())

    userId           Int            @map("user_id")
    user             User           @relation(fields: [userId], references: [id])
    flightScheduleId Int            @map("flight_schedule_id")
    workSchedule     FlightSchedule @relation(fields: [flightScheduleId], references: [id])

    message String
    role    ROLE

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("note_request_hire_helicopter")
}

model Configuration {
    id Int @id @default(autoincrement())

    key   String
    value String

    createAt DateTime? @default(now()) @map("create_at") @db.Timestamp(0)
    createBy Int?      @map("create_by")
    isDelete Int?      @default(0) @map("is_delete")
    updateAt DateTime? @default(now()) @updatedAt() @map("update_at") @db.Timestamp(0)
    updateBy Int?      @map("update_by")

    @@map("configuration")
}
